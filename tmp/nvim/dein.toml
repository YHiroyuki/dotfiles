# ステータスバーのカスタマイズ
# インデントの表示
[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_fileTypeExclude = ['help', 'nerdtree', 'vimfiler', 'defx']
  let g:indentLine_char = '│'
'''

# markdownプレビュー用
[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'tyru/open-browser.vim'

# 単語検索
[[plugins]]
repo = 'mileszs/ack.vim'

# 整形
# [[plugins]]
# repo = 'h1mesuke/vim-alignta'

[[plugins]]
repo = 'kg8m/vim-simple-align'

# コーディングスタイル調整
[[plugins]]
repo = 'editorconfig/editorconfig-vim'

# Git関連
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  set signcolumn=yes
  set updatetime=500
  let g:gitgutter_sign_added = '✚'
  let g:gitgutter_sign_modified = '➜'
  let g:gitgutter_sign_modified_removed = '✘➜'
  let g:gitgutter_sign_removed = '✘'
'''

# Go言語用
[[plugins]]
repo = 'fatih/vim-go'
[[plugins]]
repo = 'vim-jp/vim-go-extra'

# tomlファイル
[[plugins]]
repo = 'cespare/vim-toml'

# アイコン
[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'elzr/vim-json'

[[plugins]]
repo = 'Shougo/pum.vim'

# 翻訳
[[plugins]]
repo = 'skanehira/translate.vim'
hook_add = '''
  let g:translate_source = "en"
  let g:translate_target = "ja"
  let g:translate_popup_window = 0
  let g:translate_winsize = 3
'''

[[plugins]]
repo = 'github/copilot.vim'


[[plugins]]
 repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'williamboman/mason.nvim'

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'


[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
lua_add = '''
require('lualine').setup {
  options = {
    theme = 'gruvbox',
    component_separators = { left = '', right = ''},
    section_separators = { left = '', right = ''},
    disabled_filetypes = {
      statusline = {},
      winbar = {},
    },
    ignore_focus = {},
    always_divide_middle = true,
    globalstatus = false,
    refresh = {
      statusline = 1000,
      tabline = 1000,
      winbar = 1000,
    }
  },
  sections = {
    lualine_a = {'mode'},
    lualine_b = {
      {
        'filename',
        file_status = true,      -- Displays file status (readonly status, modified status)
        newfile_status = false,  -- Display new file status (new file means no write after created)
        path = 0,                -- 0: Just the filename
                                 -- 1: Relative path
                                 -- 2: Absolute path
                                 -- 3: Absolute path, with tilde as the home directory
                                 -- 4: Filename and parent dir, with tilde as the home directory
  
        shorting_target = 40,    -- Shortens path to leave 40 spaces in the window
                                 -- for other components. (terrible name, any suggestions?)
        symbols = {
          modified = ' ',      -- Text to show when the file is modified.
          readonly = ' ',      -- Text to show when the file is non-modifiable or readonly.
          unnamed = '[No Name]', -- Text to show for unnamed buffers.
          newfile = '[New]',     -- Text to show for newly created file before first write
        }
      }
    },
    lualine_c = {'branch', 'diff', 'diagnostics'},
    lualine_x = {'encoding', 'fileformat', 'filetype'},
    lualine_y = {'progress'},
    lualine_z = {'location'}
  },
  -- inactive_sections = {
  --   lualine_a = {},
  --   lualine_b = {},
  --   lualine_c = {'filename'},
  --   lualine_x = {'location'},
  --   lualine_y = {},
  --   lualine_z = {}
  -- },
  tabline = {},
  winbar = {},
  inactive_winbar = {},
  extensions = {}
}
'''
