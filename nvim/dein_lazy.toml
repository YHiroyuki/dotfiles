[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = 'CursorHold'

# Filer
[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
let g:defx_icons_column_length = 2
nnoremap <silent> <C-e>     <Cmd>Defx -resume<CR>
nnoremap <silent> <Leader>e <Cmd>Defx -search-recursive=`expand('%')` -resume<CR>
'''
hook_source = '''
autocmd FileType defx call s:defx_my_settings()
function! s:defx_my_settings() abort
  set nonumber
  set norelativenumber
  " Define mappings
  " 移動
  nnoremap <silent><buffer><expr> 1
  \ defx#do_action('call', 'DefxExtendOpen')
  nnoremap <silent><buffer><expr> h
  \ defx#do_action('close_tree')
  nnoremap <silent><buffer><expr> j
  \ line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k
  \ line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> l
  \ defx#do_action('open_tree')
  nnoremap <silent><buffer><expr> o
  \ defx#do_action('open_or_close_tree')
  nnoremap <silent><buffer><expr> 5
  \ defx#do_action('redraw')
  " 描画
  nnoremap <silent><buffer><expr> i
  \ defx#do_action('toggle_ignored_files')
  " ファイル操作
  nnoremap <silent><buffer><expr> c
  \ defx#do_action('copy')
  nnoremap <silent><buffer><expr> m
  \ defx#do_action('move')
  nnoremap <silent><buffer><expr> p
  \ defx#do_action('paste')
  nnoremap <silent><buffer><expr> nd
  \ defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> nf
  \ defx#do_action('new_file')
  nnoremap <silent><buffer><expr> r
  \ defx#do_action('rename')
  nnoremap <silent><buffer><expr> d
  \ defx#do_action('remove')
  " extra
  nnoremap <silent><buffer><expr> <CR>
  \ defx#do_action('drop')
  nnoremap <silent><buffer><expr> yy
  \ defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> ~
  \ defx#do_action('cd')
  nnoremap <silent><buffer><expr> ..
  \ defx#do_action('cd', '..')
  nnoremap <silent><buffer><expr> q
  \ defx#do_action('quit')
  " nnoremap <silent><buffer><expr> <Space>
  " \ defx#do_action('toggle_select') . 'j'
  " nnoremap <silent><buffer><expr> *
  " \ defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> <C-g>
  \ defx#do_action('print')
  nnoremap <silent><buffer><expr> cd
  \ defx#do_action('change_vim_cwd')
  nnoremap <silent><buffer><expr> x
  \ defx#is_directory() ?
  \ defx#do_action('open_tree', 'recursive:10') :
  \ defx#do_action('preview')
endfunction
call defx#custom#option('_', {
    \ 'winwidth': 40,
    \ 'winheight': 15,
    \ 'split': 'vertical',
    \ 'direction': 'topleft',
    \ 'show_ignored_files': 1,
    \ 'buffer_name': '',
    \ 'toggle': 1,
    \ 'columns': 'indent:git:icons:filename:mark',
    \ })
call defx#custom#column('git', 'indicators', {
    \ 'Modified'  : '✹',
    \ 'Staged'    : '✚',
    \ 'Untracked' : '✭',
    \ 'Renamed'   : '➜',
    \ 'Unmerged'  : '═',
    \ 'Ignored'   : '☒',
    \ 'Deleted'   : '✖',
    \ 'Unknown'   : '?'
    \ })
call defx#custom#column('git', 'column_length', 2)

function! DefxExtendOpen(context) abort
  echo a:context.targets[0]
endfunction
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'

# 補完
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
autocmd CompleteDone * silent! pclose!
set completeopt+=noinsert
imap <C-Space> <C-x><C-o>
'''
hook_source = '''
call deoplete#custom#option('smart_case', v:true)
'''
